#version 400 core

in vec3 pos;
in vec2 texCoords;
in vec3 normal;

out vec2 pass_texCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;
out float visibility;

uniform mat4 transMat;
uniform mat4 projMat;
uniform mat4 viewMat;
uniform vec3 lightPos;

const float density = 0.0015;
const float gradient = 5.0;

void main(void) {

	vec4 worldPos = transMat * vec4(pos, 1.0);
	vec4 posRelToCam = viewMat * worldPos;
	gl_Position = projMat * posRelToCam;
	pass_texCoords = texCoords;
	
	surfaceNormal = (transMat * vec4(normal, 0.0)).xyz;
	toLightVector = lightPos - worldPos.xyz;
	toCameraVector = (inverse(viewMat) * vec4(0.0, 0.0, 0.0, 1.0)).xyz - worldPos.xyz;
	
	float dis = length(posRelToCam.xyz);
	visibility = exp(-pow((dis*density),gradient));
	visibility = clamp(visibility, 0.0, 1.0);
}